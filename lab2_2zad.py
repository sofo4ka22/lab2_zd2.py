# #  Лабораторна робота №2
# ### навчально-методичний додаток (продовження)
# ***


# ## Структури даних

# ###  Списки - List
# 
# __Списки__ - це найбільш часто використовувана структура даних. 
# 
# Це послідовність даних, яка укладена у квадратні дужки, а дані відокремлюються комою. До кожного з цих даних можна отримати доступ, викликавши його значення по індексу.
# Списки оголошуються просто прирівнюючи змінну до '[]' або списку.
# 
# ```spisok = [obj1, obj2, ..., objN]```, де obj - будь-який допустимий python-об'єкт
# 
# spisok = [1, -0.12, "Вася", [42, "Пупкін"], False ]
# 
# [Докладніше про списки в Python](https://devpractice.ru/python-lesson-7-work-with-list/)

a = []
print (type(a))

# ### операції над списками
# 
# 1. ```+``` - __додавання__: приєднує один список до другого
# 2. ```*``` - __множення__ : розшірює список вправо на множник

a = [1,2,3] + [3, 4]
b = a * 2
print("a = ", a)
print("b = ", b)


### ЗАВДАННЯ 1: 
# 1) створити пустий список `i_am`
# 2) записати в нього своє ім'я
# 3) вивести `id` списка
# 4) додати до списка другий елемент з своїм прізвищем
# 5) вивести отриманий список то його `id`



# ### Особливості зберігання даних в списках
# 
# Списки - не змінюють свое `id` при зміні значень, або кількості елементів


# ### Індексація в списках
# 
# __Індексація__ - це метод доступу до окремого єлементу в списку. Елементи в списках нумеруються з 0, а доступ до них здійснюється через номер в квадратних дужках.
# 
# name = "Вася Пупкін"
# name[5]
n = [1,2,3,4,5]
print(n[3], id(n))
n[3] = 99999
print(n, id(n))

# Індекси можуть бути відємними


print(n[-2])
n[-2] = 4
print(n)


# #### срізи в списках
# 
# __Срізи__ - це метод виділення зі списка іншого списка по заданому діапазону індексів
# 
# spisok[<начало> : <кінець> : <шаг>]


n * 2
print("n = ", n)

m = n[3:5]
print("m = ", m)

k = n[:4]
print("k = ", k)

l = n[: : 2]
print("l = ", l)


### ЗАВДАННЯ 3: 
# 1) створити список із 10 натуральних чисел [1..10]
# 2) написати код що виводить перші 5 єлементів
# 3) написати код що виводить останні 6 єлементів
# 4) написати код що виводить всі парні єлементи



# #### функції і методи спісків


l = list(range(5))
print(l)

print(dir(__builtins__))


print(dir(list))


# ### вкладені списки


spisok = [[1, 2], [3, 4]]
print (spisok[0])
print (spisok[0][1])


### ЗАВДАННЯ 4: 
# 1) створити вкладений список [[1,2,3], [4,5,6], [7,8,9]]
# 2) написати код що замінює 4-ку на 42
# 3) написати код що міняє місцями 3-ку та 5-ку

# ## Кортежі - tuples

# __Кортеж__ - це _незмінна_ структура послідовних даних в круглих дужках
k = ()    # пустий котреж
k1 = (23,) # одноелементний кортеж
kn = (1, 2, "Вася", [43, 1.2], (55, "39"))
print(type(k))

# #### відмінність від списків


l = [1, 2]
k = (1, 2)
print(l.__sizeof__())
print(k.__sizeof__())
print (l, id(l))
l += [3]
print (l, id(l))
print (k, id(k))
k += (3,)
print (k, id(k))
l.append(4)
print(l)


